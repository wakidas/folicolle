name: RSpec
on:
  push:
    paths-ignore:
      - README.md
      - .gitignore
  pull_request:
    types:
      - reopened
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: folicolle_test
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    container:
      image: cimg/ruby:3.1.2
      env:
        TZ: Asia/Tokyo
        RAILS_ENV: test
        PGHOST: postgres
        PGUSER: postgres
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
#        with:
#          ruby-version: '3.1.0'
      - name: Install dependencies
        run: bundle install
      - name: Setup database/
        run: bundle exec rails db:setup
      - name: Run rspec
        run: bundle exec rspec
#jobs:
#  test:
#    runs-on: ubuntu-latest
#    if: "!contains(github.event.head_commit.message, 'ci skip')"
#    services:
#      postgres:
#        image: postgres:13-alpine
#        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: folicolle_test
#          POSTGRES_HOST_AUTH_METHOD: 'trust'
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#        ports:
#          - 5432:5432
#    container:
#      image: cimg/ruby:3.1.2
#      env:
#        TZ: Asia/Tokyo
#        RAILS_ENV: test
#        PGHOST: postgres
#        PGUSER: postgres
#    steps:
#      - name: Setup file system permissions
#        run: |
#          sudo chown -R  circleci $GITHUB_WORKSPACE /github /__w/_temp
#          sudo chmod -R 777 $GITHUB_WORKSPACE /github /__w/_temp
#          sudo chmod -R 777 $GITHUB_WORKSPACE /github /__w/_temp/_runner_file_commands
#          sudo chmod -R 777 /__w/_temp
#          sudo chmod -R 777 /__w/_temp/_runner_file_commands
#          echo 'ここから'
#          whoami
#          echo $GITHUB_WORKSPACE
#          echo $GITHUB_WORKSPACE /github /__w/_temp
#          echo $GITHUB_WORKSPACE /__w/_temp
#
#      - uses: actions/checkout@v3
#      - name: Set up Ruby
#        uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
#        with:
#          ruby-version: 3.1.0
#          bundler-cache: true
#        env:
#          ImageOS: ubuntu20
#      - name: Cache gems
#        uses: actions/cache@v1
#        with:
#          path: vendor/bundle
#          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-gem-
#      - name: Cache node modules
#        uses: actions/cache@v1
#        with:
#          path: node_modules
#          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-node-
#      - name: Install dependencies
#        run: |
#          gem install bundler
#          bundle install --path vendor/bundle --without production
#          yarn install
#      - name: Set env
#        run: |
#          echo '::set-env name=RAILS_ENV::test'
#          echo '::set-env name=DATABASE_URL::postgres://postgres:postgres@localhost:5432/my_database'
#      - name: setup DB
#        run: |
#          bundle exec rails db:schema:load
#      - name: Run tests
#        run: bundle exec rspec